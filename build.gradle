// output help information
println 'gradle :build -Prelease -- to make release build (not a snapshot)'


buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath group: 'org.junit.platform', name: 'junit-platform-gradle-plugin', version: project.properties['junit.platform.version']
	}
}

//apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven'
//apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'


repositories {
	mavenLocal()

	maven {
		name "internal"
		url "https://archiva.2me.link/repository/internal"
		credentials { username(archivaUserName); password(archivaUserPass) }
	}

	maven {
		name "own-repo"
		url "https://archiva.2me.link/repository/own-repo"
		credentials { username(archivaUserName); password(archivaUserPass) }
	}

	mavenCentral()
	jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.

	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

	// This dependency is exported to consumers, that is to say found on their compile classpath.
//    api

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
//    implementation

    // Use JUnit test framework
//    testImplementation

	testRuntimeOnly group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
	testRuntimeOnly group: 'org.fusesource.jansi', name: 'jansi', version: '1.16'

	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: project.properties['junit.jupiter.version']
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: project.properties['junit.jupiter.version']
	testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: project.properties['junit.jupiter.version']
	testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-runner', version: project.properties['junit.platform.version']
	testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: project.properties['junit.platform.version']
	testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-console', version: project.properties['junit.platform.version']
}


project.ext {
	address = project.properties["address"]
	email = project.properties["email"]
}

// Project configuration:
group = project.properties["package.group"]
archivesBaseName = project.properties["package.artifact"]
version = project.properties["package.version"]

//ext.currentBuildNumber = ""
if (!hasProperty("release"))
	version = version + "-SNAPSHOT"
	//version = version + "-b" + new Date().format('yyMMddHH.mmss') + "-SNAPSHOT"


project.sourceCompatibility = 1.8
project.targetCompatibility = 1.8

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}
task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}


test {
	workingDir "./test_workdir"
}

junitPlatformTest {
	println "See reports here: '" + testReportDir + "'."
	workingDir "./test_workdir"
}
